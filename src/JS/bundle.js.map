{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3De;AACf;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;ACde;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,oBAAoB;;;;;;UChBnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACN6C;AACE;AACI;AACU;AACZ;AACQ;AACzD;AACA;AACe,sBAAsB,8GAA8G;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY,EAAE,KAAK;AAChE;AACA;AACA,8CAA8C,aAAa,EAAE,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAe;AAC1C;AACA,qBAAqB,6DAAa;AAClC,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA,mDAAmD,YAAY,EAAE,KAAK;AACtE;AACA,kDAAkD,aAAa,EAAE,KAAK;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,aAAa,EAAE,KAAK;AACzE,mDAAmD,EAAE,EAAE,KAAK;AAC5D;AACA;AACA;AACA,uDAAuD,YAAY,EAAE,KAAK;AAC1E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY,EAAE,KAAK;AACxE,kDAAkD,EAAE,EAAE,KAAK;AAC3D;AACA;AACA;AACA,sDAAsD,aAAa,EAAE,KAAK;AAC1E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oEAAoB;AACxB;AACA,IAAI,8DAAc;AAClB,IAAI,kEAAkB;AACtB;AACA,C","sources":["webpack://slider/./src/JS/addControlsBar.js","webpack://slider/./src/JS/getCurrentIndex.js","webpack://slider/./src/JS/getLeftIndex.js","webpack://slider/./src/JS/getRightIndex.js","webpack://slider/./src/JS/setEventsClickDrag.js","webpack://slider/./src/JS/setupForOneTwoSlides.js","webpack://slider/webpack/bootstrap","webpack://slider/webpack/runtime/define property getters","webpack://slider/webpack/runtime/hasOwnProperty shorthand","webpack://slider/webpack/runtime/make namespace object","webpack://slider/./src/JS/script.js"],"sourcesContent":["export default function addControlsBar(container, nextSlide, autoPlayTime, prevSlide, autoPlay, slideTransitionTime, hideButtons) {\r\n\r\n    const controlsBar = document.createElement('div');\r\n    const prevBtn = document.createElement('button');\r\n    const nextBtn = document.createElement('button');\r\n    const startBtn = document.createElement('button');\r\n    const stopBtn = document.createElement('button');\r\n    let interval;\r\n\r\n    function hideAllButtons() {\r\n        for (let i = 0; i < controlsBar.children.length; i+=1) {\r\n            controlsBar.children[i].classList.add('sliderJs_hide');\r\n        }\r\n    }\r\n\r\n    function startAutoPlay() {\r\n        hideAllButtons();\r\n        stopBtn.classList.remove('sliderJs_hide');\r\n        interval = setInterval(nextSlide, autoPlayTime);\r\n    }\r\n\r\n    function stopAutoPlay() {\r\n\r\n        for (let i = 0; i < controlsBar.children.length; i+=1) {\r\n            controlsBar.children[i].classList.remove('sliderJs_hide');\r\n        }                            \r\n        stopBtn.classList.add('sliderJs_hide');\r\n        clearInterval(interval);\r\n    }\r\n\r\n    function addControlElement(buttonsName, text) {\r\n        controlsBar.appendChild(buttonsName);\r\n        buttonsName.innerHTML = text;\r\n    }\r\n    \r\n    controlsBar.classList.add('sliderJs_wrapper-button');\r\n    container.appendChild(controlsBar);\r\n    addControlElement(prevBtn, 'PREV');\r\n    addControlElement(nextBtn, 'NEXT');\r\n    addControlElement(startBtn, 'START');\r\n    addControlElement(stopBtn, 'STOP');\r\n    stopBtn.classList.add('sliderJs_hide');\r\n    \r\n    for (let i = 0; i < controlsBar.children.length; i+=1) {\r\n        controlsBar.children[i].classList.add('sliderJs_btn');\r\n    }\r\n\r\n    nextBtn.addEventListener('click', nextSlide);\r\n    prevBtn.addEventListener('click', prevSlide);\r\n    startBtn.addEventListener('click', startAutoPlay);\r\n    stopBtn.addEventListener('click', stopAutoPlay);\r\n\r\n    if (autoPlay && autoPlayTime >= slideTransitionTime) {\r\n        startAutoPlay();\r\n    }\r\n    if (hideButtons) {\r\n        hideAllButtons();\r\n    }\r\n    \r\n}\r\n","export default function getCurrentIndex(direction, currentIndex, elements) {\r\n    let currentIndexValue;\r\n    if (direction === 'right' && currentIndex === elements.length - 1) {\r\n        currentIndexValue = 0;\r\n    }else if (direction === 'right'){\r\n        currentIndexValue = currentIndex + 1;\r\n    }\r\n\r\n    if (direction === 'left' && currentIndex === 0) {\r\n        currentIndexValue = elements.length - 1;\r\n    }else if (direction === 'left'){\r\n        currentIndexValue = currentIndex - 1;\r\n    }\r\n    return currentIndexValue;\r\n}","export default function getLeftIndex(currentIndex, elements) {\r\n    let leftIndex;\r\n\r\n    if (currentIndex === 0) {\r\n        leftIndex = elements.length - 1;\r\n    }\r\n    if (currentIndex === elements.length - 1) {\r\n        leftIndex = currentIndex - 1;\r\n    }\r\n    if (currentIndex !== 0 && currentIndex !== elements.length - 1) { \r\n        leftIndex = currentIndex - 1;\r\n    }\r\n    return leftIndex;\r\n}","export default function getRightIndex(currentIndex, elements) {\r\n    let rightIndex;\r\n\r\n    if (currentIndex === 0) {\r\n        rightIndex = currentIndex + 1;\r\n    }\r\n    if (currentIndex === elements.length - 1) {\r\n        rightIndex = 0;\r\n    }\r\n    if (currentIndex !== 0 && currentIndex !== elements.length - 1) { \r\n        rightIndex = currentIndex + 1;\r\n    }\r\n    return rightIndex;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport default function setEventsClickDrag(container,prevSlide,nextSlide) {\r\n    \r\n    let mouseDownXPosition;\r\n    let currentSlideWasChanged = false;\r\n\r\n    function dragging(event) {\r\n        const positionDragX = event.pageX;\r\n        const dragShift = positionDragX - mouseDownXPosition;\r\n    \r\n        if(dragShift > 50 && !currentSlideWasChanged) {\r\n            prevSlide();\r\n            currentSlideWasChanged = true;\r\n    \r\n        }\r\n        if(dragShift < -50 && !currentSlideWasChanged) {\r\n            nextSlide();\r\n            currentSlideWasChanged = true;\r\n        }\r\n    }\r\n    \r\n    function startDrag(event) {\r\n        currentSlideWasChanged = false;\r\n        event.preventDefault();\r\n        mouseDownXPosition = event.pageX;\r\n        window.addEventListener('pointermove', dragging);\r\n    }\r\n    \r\n    function stopDrag() {\r\n        window.removeEventListener('pointermove', dragging);\r\n    }\r\n    \r\n    container.addEventListener('pointerdown', startDrag);\r\n    window.addEventListener('pointerup', stopDrag);\r\n}\r\n\r\n","function setupForOneTwoSlides(container, elements) {\r\n    function appendElement(element) {\r\n        container.appendChild(element);\r\n        elements.push(element);\r\n    }\r\n\r\n    if (elements.length === 1) {\r\n        appendElement(elements[0].cloneNode(true));\r\n        appendElement(elements[0].cloneNode(true));\r\n    }\r\n    if (elements.length === 2) {\r\n        appendElement(elements[0].cloneNode(true));\r\n        appendElement(elements[1].cloneNode(true));\r\n    }\r\n}\r\n\r\nexport default setupForOneTwoSlides;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getLeftIndex from \"./getLeftIndex.js\";\r\nimport getRightIndex from \"./getRightIndex.js\";\r\nimport getCurrentIndex from \"./getCurrentIndex.js\";\r\nimport setupForOneTwoSlides from \"./setupForOneTwoSlides.js\";\r\nimport addControlsBar from \"./addControlsBar.js\";\r\nimport setEventsClickDrag from \"./setEventsClickDrag.js\";\r\n\r\n\r\nexport default function startSlider({containerId, widthSlider, heightSlider, autoPlay, autoPlayTime, hideButtons, slideTransitionTime, startSlide }) {\r\n    \r\n    const container = document.getElementById(containerId);\r\n    const slidesContainer = document.createElement('div');\r\n\r\n    while (container.children.length !== 0) {\r\n        slidesContainer.appendChild(container.children[0]);\r\n    }\r\n    container.appendChild(slidesContainer);\r\n    slidesContainer.classList.add('container');\r\n\r\n    function getSlides() {\r\n        const slides = [...slidesContainer.children];\r\n        return slides;\r\n    }\r\n\r\n    const slidesElements = getSlides();\r\n\r\n    let currentSlide = startSlide - 1;\r\n    let rightSlide = 0;\r\n    let leftSlide = 0;\r\n    let isTransitioning = false;\r\n    \r\n\r\n    function setupInputParameters() {\r\n        if (widthSlider) {\r\n            slidesContainer.style.width = `${widthSlider}${'px'}`;\r\n        }\r\n        if (heightSlider) {\r\n            slidesContainer.style.height = `${heightSlider}${'px'}`;\r\n        }\r\n    }\r\n\r\n    function reindexSlides(directionSlide) {\r\n        if(directionSlide) {\r\n            currentSlide = getCurrentIndex(directionSlide, currentSlide, slidesElements);\r\n        }\r\n        rightSlide = getRightIndex(currentSlide, slidesElements);\r\n        leftSlide = getLeftIndex(currentSlide, slidesElements);\r\n    }\r\n\r\n    function setupSlides() {\r\n        reindexSlides();\r\n        for (let i = 0; i < slidesElements.length; i+=1) {\r\n            slidesElements[i].classList.add('sliderJs_hide');\r\n        }\r\n        slidesElements[currentSlide].classList.remove('sliderJs_hide');\r\n        slidesElements[rightSlide].classList.remove('sliderJs_hide');\r\n        slidesElements[rightSlide].style.left = `${widthSlider}${'px'}`;\r\n        slidesElements[leftSlide].classList.remove('sliderJs_hide');\r\n        slidesElements[leftSlide].style.left = `${-widthSlider}${'px'}`;\r\n    }\r\n    \r\n\r\n    function transitionSlideRight() {\r\n        \r\n        slidesElements[leftSlide].classList.add('sliderJs_hide');\r\n        slidesElements[currentSlide].style.left = `${-widthSlider}${'px'}`; \r\n        slidesElements[rightSlide].style.left = `${0}${'px'}`;\r\n        \r\n        setTimeout(() => {\r\n            reindexSlides('right');\r\n            slidesElements[rightSlide].style.left = `${widthSlider}${'px'}`;\r\n            slidesElements[rightSlide].classList.remove('sliderJs_hide');\r\n            slidesElements[leftSlide].classList.remove('sliderJs_hide');\r\n        },1000);\r\n    }\r\n\r\n    function transitionSlideLeft() {\r\n        \r\n        slidesElements[rightSlide].classList.add('sliderJs_hide');\r\n        slidesElements[currentSlide].style.left = `${widthSlider}${'px'}`; \r\n        slidesElements[leftSlide].style.left = `${0}${'px'}`;\r\n        \r\n        setTimeout(() => {\r\n            reindexSlides('left');\r\n            slidesElements[leftSlide].style.left = `${-widthSlider}${'px'}`;\r\n            slidesElements[leftSlide].classList.remove('sliderJs_hide');\r\n            slidesElements[rightSlide].classList.remove('sliderJs_hide');\r\n        },1000);\r\n    }\r\n\r\n    function nextSlide() {\r\n        if (isTransitioning) {\r\n            return;\r\n        }\r\n        transitionSlideRight();\r\n    }\r\n\r\n    function prevSlide() {\r\n        if (isTransitioning) {\r\n            return;\r\n        }\r\n        transitionSlideLeft();\r\n    }\r\n\r\n    function addEventTransitionStart() {\r\n        container.addEventListener('transitionstart', () => {\r\n            isTransitioning = true;\r\n        });\r\n    }\r\n    \r\n    function addEventTransitionEnd() {\r\n        \r\n        container.addEventListener('transitionend', () => {\r\n            isTransitioning = false;\r\n        });\r\n    }\r\n\r\n    addEventTransitionStart();\r\n    addEventTransitionEnd();\r\n\r\n    function setSlidesTransitionTime() {\r\n        if (slideTransitionTime) {\r\n            for (let i = 0; i < slidesElements.length; i+=1) {\r\n                slidesElements[i].style.transition = `all ${slideTransitionTime}s cubic-bezier(.45,.05,.55,.95) 0s`;\r\n            }\r\n        }\r\n    }\r\n\r\n    setSlidesTransitionTime();\r\n    setupInputParameters();\r\n    setupForOneTwoSlides(slidesContainer, slidesElements);\r\n    setupSlides();\r\n    addControlsBar(container, nextSlide, autoPlayTime, prevSlide, autoPlay, slideTransitionTime, hideButtons);\r\n    setEventsClickDrag(container,prevSlide,nextSlide);\r\n    \r\n}"],"names":[],"sourceRoot":""}